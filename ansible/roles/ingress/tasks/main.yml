---

- name: create configuration directory
  file:
    path: /usr/local/etc/caddy/{{ ingress_name }}
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: copy caddyfile
  template:
    src: '{{ ingress_caddyfile }}'
    dest: /usr/local/etc/caddy/{{ ingress_name }}/Caddyfile
    owner: root
    group: root
    mode: '0644'
  notify: reload caddy
  tags: conf

- name: create docker volume
  docker_volume:
    name: ingress-{{ ingress_name }}-data

- name: create and start caddy container
  docker_container:
    name: ingress-{{ ingress_name }}
    image: caddy:2.6.3
    restart_policy: unless-stopped
    volumes:
    - '/usr/local/etc/caddy/{{ ingress_name }}:/etc/caddy'
    - 'ingress-{{ ingress_name }}-data:/data'
    - '/var/www:/srv'
    networks:
    - name: general
      ipv4_address: '{{ unicast_ips["ingress-" + ingress_name][inventory_hostname].ipv4 }}'
      ipv6_address: '{{ unicast_ips["ingress-" + ingress_name][inventory_hostname].ipv6 }}'
    networks_cli_compatible: yes
    network_mode: general
    container_default_behavior: no_defaults

- name: create and start service advertisement sidecar
  docker_container:
    name: ingress-{{ ingress_name }}-sa
    image: service-advertisement:20221012
    restart_policy: unless-stopped
    capabilities:
    - net_admin
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    env:
      SA_LOCAL_AS: '4200000999'
      SA_NEIGHBOR: '{{ internal_ipv6 }}'
      SA_PEER_AS: '4200000998'
      SA_IPV4: '{{ anycast_ips["ingress-" + ingress_name].ipv4 }}'
      SA_IPV6: '{{ anycast_ips["ingress-" + ingress_name].ipv6 }}'
    networks_cli_compatible: yes
    network_mode: container:ingress-{{ ingress_name }}
    container_default_behavior: no_defaults

- name: install inbound firewall rule for ingress
  template:
    src: ingress.nft.j2
    dest: /etc/nftables/br-in.d/ingress-{{ ingress_name }}.nft
    owner: root
    group: root
    mode: '0755'
  notify: reload firewall
  tags: firewall
